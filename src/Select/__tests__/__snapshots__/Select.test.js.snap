// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Select should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Select />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div>
          <span>
             
          </span>
          <StyledButtonWContext
            onClick={[Function]}
          >
            ▼
          </StyledButtonWContext>
        </div>,
        undefined,
      ],
      "className": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span>
               
            </span>,
            undefined,
            <StyledButtonWContext
              onClick={[Function]}
            >
              ▼
            </StyledButtonWContext>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " ",
            },
            "ref": null,
            "rendered": " ",
            "type": "span",
          },
          undefined,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "▼",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "▼",
            "type": [Function],
          },
        ],
        "type": "div",
      },
      undefined,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <span>
               
            </span>
            <StyledButtonWContext
              onClick={[Function]}
            >
              ▼
            </StyledButtonWContext>
          </div>,
          undefined,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span>
                 
              </span>,
              undefined,
              <StyledButtonWContext
                onClick={[Function]}
              >
                ▼
              </StyledButtonWContext>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": " ",
              },
              "ref": null,
              "rendered": " ",
              "type": "span",
            },
            undefined,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "▼",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "▼",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        undefined,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
